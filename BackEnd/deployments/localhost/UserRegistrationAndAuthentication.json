{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [],
      "name": "UserNotRegistered",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "friendAddress",
          "type": "address"
        }
      ],
      "name": "FriendAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "email",
          "type": "string"
        }
      ],
      "name": "UserRegistered",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_friendAddress",
          "type": "address"
        }
      ],
      "name": "addFriend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_passwordHash",
          "type": "bytes32"
        }
      ],
      "name": "authenticate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pubkey",
          "type": "address"
        }
      ],
      "name": "checkUserExist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkUserExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAppUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "accountAddress",
              "type": "address"
            }
          ],
          "internalType": "struct UserRegistrationAndAuthentication.AllUserStruct[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyFriendList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyUserInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pubkey",
          "type": "address"
        }
      ],
      "name": "getUsername",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_passwordHash",
          "type": "bytes32"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userExist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "passwordHash",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "isRegistered",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1b84f1440843ed8d90a5220b2432b7738a79159f6582c0e60226839370c262c8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1957846",
    "logsBloom": "0x
    "blockHash": "0xf91b1bf58da86005157691bcedd9cbb098faf29e6c5d3a7f61e37ca61348213c",
    "transactionHash": "0x1b84f1440843ed8d90a5220b2432b7738a79159f6582c0e60226839370c262c8",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1957846",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a0295560bd6384e8d518b1817d1d3fb5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"UserNotRegistered\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"friendAddress\",\"type\":\"address\"}],\"name\":\"FriendAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"name\":\"UserRegistered\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_friendAddress\",\"type\":\"address\"}],\"name\":\"addFriend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_passwordHash\",\"type\":\"bytes32\"}],\"name\":\"authenticate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pubkey\",\"type\":\"address\"}],\"name\":\"checkUserExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkUserExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAppUser\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"accountAddress\",\"type\":\"address\"}],\"internalType\":\"struct UserRegistrationAndAuthentication.AllUserStruct[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyFriendList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyUserInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pubkey\",\"type\":\"address\"}],\"name\":\"getUsername\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_passwordHash\",\"type\":\"bytes32\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"passwordHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UserRegistrationAndAuthentication.sol\":\"UserRegistrationAndAuthentication\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UserRegistrationAndAuthentication.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nerror UserNotRegistered();\\n\\n//0x3a2f83b7b29e34942a4a3211bcb3e8e146c4f779193fc4f3246c41fcf5c221b8\\ncontract UserRegistrationAndAuthentication {\\n    // Struct to store user information\\n    struct User {\\n        string name; // User's name\\n        string email; // User's email address\\n        bytes32 passwordHash; // Hashed password\\n        bool isRegistered; // Flag to indicate if the user is registered\\n        address[] friendList; // Array to store friend addresses\\n    }\\n    struct AllUserStruct {\\n        string name;\\n        address accountAddress;\\n    }\\n\\n    AllUserStruct[] getAllUsers;\\n\\n    // Mapping to link each user's Ethereum address with their user information\\n    mapping(address => User) public users;\\n    mapping(address => bool) public userExist;\\n\\n    // Event to emit when a new user is registered\\n    event UserRegistered(\\n        address indexed userAddress,\\n        string name,\\n        string email\\n    );\\n\\n    event FriendAdded(\\n        address indexed userAddress,\\n        address indexed friendAddress\\n    );\\n\\n    // Function to register a new user\\n    function registerUser(\\n        string memory _name,\\n        string memory _email,\\n        bytes32 _passwordHash\\n    ) public {\\n        require(!users[msg.sender].isRegistered, \\\"User already registered\\\");\\n        // can add in more checks here like name/email/password cannot be empty\\n        User memory newUser = User({\\n            name: _name,\\n            email: _email,\\n            passwordHash: _passwordHash,\\n            isRegistered: true,\\n            friendList: new address[](0) // to initiate empty friend list\\n        });\\n        //push details of user into array\\n        users[msg.sender] = newUser;\\n        getAllUsers.push(AllUserStruct(_name, msg.sender));\\n        userExist[msg.sender] = true;\\n\\n        emit UserRegistered(msg.sender, _name, _email);\\n    }\\n\\n    function checkUserExists() public view returns (bool) {\\n        return userExist[msg.sender];\\n    }\\n\\n    // Function to retrieve user information for the caller\\n    function getMyUserInfo()\\n        public\\n        view\\n        returns (string memory, string memory, address[] memory)\\n    {\\n        require(users[msg.sender].isRegistered, \\\"User not registered\\\");\\n\\n        return (\\n            users[msg.sender].name,\\n            users[msg.sender].email,\\n            users[msg.sender].friendList\\n        );\\n    }\\n\\n    function checkUserExist(address pubkey) public view returns (bool) {\\n        return bytes(users[pubkey].name).length > 0;\\n    }\\n\\n    // GET USERNAME\\n    function getUsername(address pubkey) external view returns (string memory) {\\n        require(checkUserExist(pubkey), \\\"User is not registered\\\");\\n        // return the name of user\\n        return users[pubkey].name;\\n    }\\n\\n    // Function to authenticate user based on password hash\\n    function authenticate(bytes32 _passwordHash) public view returns (bool) {\\n        require(users[msg.sender].isRegistered, \\\"User not registered\\\");\\n\\n        return users[msg.sender].passwordHash == _passwordHash;\\n    }\\n\\n    function addFriend(address _friendAddress) public {\\n        // check that user is registered\\n        require(users[msg.sender].isRegistered, \\\"User not registered!\\\");\\n        require(\\n            msg.sender != _friendAddress,\\n            \\\"User cannot add themselves as friend!\\\"\\n        );\\n        if (!users[_friendAddress].isRegistered) revert UserNotRegistered();\\n\\n        // check if friend already exist in list\\n        bool isFriend = false;\\n        for (uint256 i = 0; i < users[msg.sender].friendList.length; i++) {\\n            if (users[msg.sender].friendList[i] == _friendAddress) {\\n                isFriend = true;\\n                break;\\n            }\\n        }\\n        require(!isFriend, \\\"User is already a friend\\\");\\n        users[msg.sender].friendList.push(_friendAddress);\\n        emit FriendAdded(msg.sender, _friendAddress);\\n\\n        //bi-directional friend addition\\n        users[_friendAddress].friendList.push(msg.sender);\\n        emit FriendAdded(_friendAddress, msg.sender);\\n    }\\n\\n    // GET MY FRIEND\\n    function getMyFriendList() public view returns (address[] memory) {\\n        require(users[msg.sender].isRegistered, \\\"User not registered\\\");\\n        return users[msg.sender].friendList;\\n    }\\n\\n    // function to fetch all registered users\\n    function getAllAppUser() public view returns (AllUserStruct[] memory) {\\n        return getAllUsers;\\n    }\\n\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x1e44c824691b071dc1e2690691475fa0a9dcd1783abd397752216b496e8abc83\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061228e806100206000396000f3fe6080604052600436106100a05760003560e01c8063a87430ba11610064578063a87430ba146101a4578063ab7e7cf6146101e4578063b98224d214610221578063bd0f4d0d1461024c578063ce43c03214610277578063d7a1cfe1146102b4576100a7565b80635704069e146100a95780635ad3da79146100e657806368f6d82a14610113578063926bef631461013c578063a24d41de14610179576100a7565b366100a757005b005b3480156100b557600080fd5b506100d060048036038101906100cb919061158c565b6102dd565b6040516100dd91906115d4565b60405180910390f35b3480156100f257600080fd5b506100fb6103ba565b60405161010a9392919061176f565b60405180910390f35b34801561011f57600080fd5b5061013a600480360381019061013591906118f0565b6106bf565b005b34801561014857600080fd5b50610163600480360381019061015e91906119a7565b6109df565b60405161017091906115d4565b60405180910390f35b34801561018557600080fd5b5061018e610a39565b60405161019b9190611b1d565b60405180910390f35b3480156101b057600080fd5b506101cb60048036038101906101c691906119a7565b610b80565b6040516101db9493929190611b4e565b60405180910390f35b3480156101f057600080fd5b5061020b600480360381019061020691906119a7565b610ccd565b60405161021891906115d4565b60405180910390f35b34801561022d57600080fd5b50610236610ced565b60405161024391906115d4565b60405180910390f35b34801561025857600080fd5b50610261610d41565b60405161026e9190611ba1565b60405180910390f35b34801561028357600080fd5b5061029e600480360381019061029991906119a7565b610e9e565b6040516102ab9190611bc3565b60405180910390f35b3480156102c057600080fd5b506102db60048036038101906102d691906119a7565b610fba565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1661036e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036590611c31565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154149050919050565b6060806060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1661044e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044590611c31565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040182805461052090611c80565b80601f016020809104026020016040519081016040528092919081815260200182805461054c90611c80565b80156105995780601f1061056e57610100808354040283529160200191610599565b820191906000526020600020905b81548152906001019060200180831161057c57829003601f168201915b505050505092508180546105ac90611c80565b80601f01602080910402602001604051908101604052809291908181526020018280546105d890611c80565b80156106255780601f106105fa57610100808354040283529160200191610625565b820191906000526020600020905b81548152906001019060200180831161060857829003601f168201915b50505050509150808054806020026020016040519081016040528092919081815260200182805480156106ad57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610663575b50505050509050925092509250909192565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff161561074f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074690611cfd565b60405180910390fd5b60006040518060a00160405280858152602001848152602001838152602001600115158152602001600067ffffffffffffffff811115610792576107916117c5565b5b6040519080825280602002602001820160405280156107c05781602001602082028036833780820191505090505b50815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908161081b9190611ed3565b5060208201518160010190816108319190611ed3565b506040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550608082015181600401908051906020019061087892919061149b565b50905050600060405180604001604052808681526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190816108e79190611ed3565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f92822564bab8864c3a47b34e8d23fbce5c46234eb5da261f94087b995ac0f33b85856040516109d1929190611fa5565b60405180910390a250505050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054610a2f90611c80565b9050119050919050565b60606000805480602002602001604051908101604052809291908181526020016000905b82821015610b775783829060005260206000209060020201604051806040016040529081600082018054610a9090611c80565b80601f0160208091040260200160405190810160405280929190818152602001828054610abc90611c80565b8015610b095780601f10610ade57610100808354040283529160200191610b09565b820191906000526020600020905b815481529060010190602001808311610aec57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610a5d565b50505050905090565b6001602052806000526040600020600091509050806000018054610ba390611c80565b80601f0160208091040260200160405190810160405280929190818152602001828054610bcf90611c80565b8015610c1c5780601f10610bf157610100808354040283529160200191610c1c565b820191906000526020600020905b815481529060010190602001808311610bff57829003601f168201915b505050505090806001018054610c3190611c80565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5d90611c80565b8015610caa5780601f10610c7f57610100808354040283529160200191610caa565b820191906000526020600020905b815481529060010190602001808311610c8d57829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b60026020528060005260406000206000915054906101000a900460ff1681565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610dd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc990611c31565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401805480602002602001604051908101604052809291908181526020018280548015610e9457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e4a575b5050505050905090565b6060610ea9826109df565b610ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edf90612028565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054610f3590611c80565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6190611c80565b8015610fae5780601f10610f8357610100808354040283529160200191610fae565b820191906000526020600020905b815481529060010190602001808311610f9157829003601f168201915b50505050509050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16611049576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104090612094565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036110b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ae90612126565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1661113d576040517f2163950f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018054905081101561125b578273ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040182815481106111f9576111f8612146565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611248576001915061125b565b8080611253906121a4565b915050611141565b50801561129d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129490612238565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6cbc8134e69f02f9dbaa28d8f3d760a490876f55060afa4d6882a86c2590cc7b60405160405180910390a3600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f6cbc8134e69f02f9dbaa28d8f3d760a490876f55060afa4d6882a86c2590cc7b60405160405180910390a35050565b828054828255906000526020600020908101928215611514579160200282015b828111156115135782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906114bb565b5b5090506115219190611525565b5090565b5b8082111561153e576000816000905550600101611526565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61156981611556565b811461157457600080fd5b50565b60008135905061158681611560565b92915050565b6000602082840312156115a2576115a161154c565b5b60006115b084828501611577565b91505092915050565b60008115159050919050565b6115ce816115b9565b82525050565b60006020820190506115e960008301846115c5565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561162957808201518184015260208101905061160e565b60008484015250505050565b6000601f19601f8301169050919050565b6000611651826115ef565b61165b81856115fa565b935061166b81856020860161160b565b61167481611635565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116d6826116ab565b9050919050565b6116e6816116cb565b82525050565b60006116f883836116dd565b60208301905092915050565b6000602082019050919050565b600061171c8261167f565b611726818561168a565b93506117318361169b565b8060005b8381101561176257815161174988826116ec565b975061175483611704565b925050600181019050611735565b5085935050505092915050565b600060608201905081810360008301526117898186611646565b9050818103602083015261179d8185611646565b905081810360408301526117b18184611711565b9050949350505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117fd82611635565b810181811067ffffffffffffffff8211171561181c5761181b6117c5565b5b80604052505050565b600061182f611542565b905061183b82826117f4565b919050565b600067ffffffffffffffff82111561185b5761185a6117c5565b5b61186482611635565b9050602081019050919050565b82818337600083830152505050565b600061189361188e84611840565b611825565b9050828152602081018484840111156118af576118ae6117c0565b5b6118ba848285611871565b509392505050565b600082601f8301126118d7576118d66117bb565b5b81356118e7848260208601611880565b91505092915050565b6000806000606084860312156119095761190861154c565b5b600084013567ffffffffffffffff81111561192757611926611551565b5b611933868287016118c2565b935050602084013567ffffffffffffffff81111561195457611953611551565b5b611960868287016118c2565b925050604061197186828701611577565b9150509250925092565b611984816116cb565b811461198f57600080fd5b50565b6000813590506119a18161197b565b92915050565b6000602082840312156119bd576119bc61154c565b5b60006119cb84828501611992565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000611a1c826115ef565b611a268185611a00565b9350611a3681856020860161160b565b611a3f81611635565b840191505092915050565b60006040830160008301518482036000860152611a678282611a11565b9150506020830151611a7c60208601826116dd565b508091505092915050565b6000611a938383611a4a565b905092915050565b6000602082019050919050565b6000611ab3826119d4565b611abd81856119df565b935083602082028501611acf856119f0565b8060005b85811015611b0b5784840389528151611aec8582611a87565b9450611af783611a9b565b925060208a01995050600181019050611ad3565b50829750879550505050505092915050565b60006020820190508181036000830152611b378184611aa8565b905092915050565b611b4881611556565b82525050565b60006080820190508181036000830152611b688187611646565b90508181036020830152611b7c8186611646565b9050611b8b6040830185611b3f565b611b9860608301846115c5565b95945050505050565b60006020820190508181036000830152611bbb8184611711565b905092915050565b60006020820190508181036000830152611bdd8184611646565b905092915050565b7f55736572206e6f74207265676973746572656400000000000000000000000000600082015250565b6000611c1b6013836115fa565b9150611c2682611be5565b602082019050919050565b60006020820190508181036000830152611c4a81611c0e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c9857607f821691505b602082108103611cab57611caa611c51565b5b50919050565b7f5573657220616c72656164792072656769737465726564000000000000000000600082015250565b6000611ce76017836115fa565b9150611cf282611cb1565b602082019050919050565b60006020820190508181036000830152611d1681611cda565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611d7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611d42565b611d898683611d42565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000611dd0611dcb611dc684611da1565b611dab565b611da1565b9050919050565b6000819050919050565b611dea83611db5565b611dfe611df682611dd7565b848454611d4f565b825550505050565b600090565b611e13611e06565b611e1e818484611de1565b505050565b5b81811015611e4257611e37600082611e0b565b600181019050611e24565b5050565b601f821115611e8757611e5881611d1d565b611e6184611d32565b81016020851015611e70578190505b611e84611e7c85611d32565b830182611e23565b50505b505050565b600082821c905092915050565b6000611eaa60001984600802611e8c565b1980831691505092915050565b6000611ec38383611e99565b9150826002028217905092915050565b611edc826115ef565b67ffffffffffffffff811115611ef557611ef46117c5565b5b611eff8254611c80565b611f0a828285611e46565b600060209050601f831160018114611f3d5760008415611f2b578287015190505b611f358582611eb7565b865550611f9d565b601f198416611f4b86611d1d565b60005b82811015611f7357848901518255600182019150602085019450602081019050611f4e565b86831015611f905784890151611f8c601f891682611e99565b8355505b6001600288020188555050505b505050505050565b60006040820190508181036000830152611fbf8185611646565b90508181036020830152611fd38184611646565b90509392505050565b7f55736572206973206e6f74207265676973746572656400000000000000000000600082015250565b60006120126016836115fa565b915061201d82611fdc565b602082019050919050565b6000602082019050818103600083015261204181612005565b9050919050565b7f55736572206e6f74207265676973746572656421000000000000000000000000600082015250565b600061207e6014836115fa565b915061208982612048565b602082019050919050565b600060208201905081810360008301526120ad81612071565b9050919050565b7f557365722063616e6e6f7420616464207468656d73656c76657320617320667260008201527f69656e6421000000000000000000000000000000000000000000000000000000602082015250565b60006121106025836115fa565b915061211b826120b4565b604082019050919050565b6000602082019050818103600083015261213f81612103565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121af82611da1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121e1576121e0612175565b5b600182019050919050565b7f5573657220697320616c7265616479206120667269656e640000000000000000600082015250565b60006122226018836115fa565b915061222d826121ec565b602082019050919050565b6000602082019050818103600083015261225181612215565b905091905056fea26469706673582212206d5817dd077bc16e55de0836716e59a1cdef571aa2ba3211d1b24561e1329fac64736f6c63430008150033",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c8063a87430ba11610064578063a87430ba146101a4578063ab7e7cf6146101e4578063b98224d214610221578063bd0f4d0d1461024c578063ce43c03214610277578063d7a1cfe1146102b4576100a7565b80635704069e146100a95780635ad3da79146100e657806368f6d82a14610113578063926bef631461013c578063a24d41de14610179576100a7565b366100a757005b005b3480156100b557600080fd5b506100d060048036038101906100cb919061158c565b6102dd565b6040516100dd91906115d4565b60405180910390f35b3480156100f257600080fd5b506100fb6103ba565b60405161010a9392919061176f565b60405180910390f35b34801561011f57600080fd5b5061013a600480360381019061013591906118f0565b6106bf565b005b34801561014857600080fd5b50610163600480360381019061015e91906119a7565b6109df565b60405161017091906115d4565b60405180910390f35b34801561018557600080fd5b5061018e610a39565b60405161019b9190611b1d565b60405180910390f35b3480156101b057600080fd5b506101cb60048036038101906101c691906119a7565b610b80565b6040516101db9493929190611b4e565b60405180910390f35b3480156101f057600080fd5b5061020b600480360381019061020691906119a7565b610ccd565b60405161021891906115d4565b60405180910390f35b34801561022d57600080fd5b50610236610ced565b60405161024391906115d4565b60405180910390f35b34801561025857600080fd5b50610261610d41565b60405161026e9190611ba1565b60405180910390f35b34801561028357600080fd5b5061029e600480360381019061029991906119a7565b610e9e565b6040516102ab9190611bc3565b60405180910390f35b3480156102c057600080fd5b506102db60048036038101906102d691906119a7565b610fba565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1661036e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036590611c31565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154149050919050565b6060806060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1661044e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044590611c31565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040182805461052090611c80565b80601f016020809104026020016040519081016040528092919081815260200182805461054c90611c80565b80156105995780601f1061056e57610100808354040283529160200191610599565b820191906000526020600020905b81548152906001019060200180831161057c57829003601f168201915b505050505092508180546105ac90611c80565b80601f01602080910402602001604051908101604052809291908181526020018280546105d890611c80565b80156106255780601f106105fa57610100808354040283529160200191610625565b820191906000526020600020905b81548152906001019060200180831161060857829003601f168201915b50505050509150808054806020026020016040519081016040528092919081815260200182805480156106ad57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610663575b50505050509050925092509250909192565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff161561074f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074690611cfd565b60405180910390fd5b60006040518060a00160405280858152602001848152602001838152602001600115158152602001600067ffffffffffffffff811115610792576107916117c5565b5b6040519080825280602002602001820160405280156107c05781602001602082028036833780820191505090505b50815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908161081b9190611ed3565b5060208201518160010190816108319190611ed3565b506040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550608082015181600401908051906020019061087892919061149b565b50905050600060405180604001604052808681526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190816108e79190611ed3565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f92822564bab8864c3a47b34e8d23fbce5c46234eb5da261f94087b995ac0f33b85856040516109d1929190611fa5565b60405180910390a250505050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054610a2f90611c80565b9050119050919050565b60606000805480602002602001604051908101604052809291908181526020016000905b82821015610b775783829060005260206000209060020201604051806040016040529081600082018054610a9090611c80565b80601f0160208091040260200160405190810160405280929190818152602001828054610abc90611c80565b8015610b095780601f10610ade57610100808354040283529160200191610b09565b820191906000526020600020905b815481529060010190602001808311610aec57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610a5d565b50505050905090565b6001602052806000526040600020600091509050806000018054610ba390611c80565b80601f0160208091040260200160405190810160405280929190818152602001828054610bcf90611c80565b8015610c1c5780601f10610bf157610100808354040283529160200191610c1c565b820191906000526020600020905b815481529060010190602001808311610bff57829003601f168201915b505050505090806001018054610c3190611c80565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5d90611c80565b8015610caa5780601f10610c7f57610100808354040283529160200191610caa565b820191906000526020600020905b815481529060010190602001808311610c8d57829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b60026020528060005260406000206000915054906101000a900460ff1681565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610dd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc990611c31565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401805480602002602001604051908101604052809291908181526020018280548015610e9457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e4a575b5050505050905090565b6060610ea9826109df565b610ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edf90612028565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054610f3590611c80565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6190611c80565b8015610fae5780601f10610f8357610100808354040283529160200191610fae565b820191906000526020600020905b815481529060010190602001808311610f9157829003601f168201915b50505050509050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16611049576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104090612094565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036110b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ae90612126565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1661113d576040517f2163950f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018054905081101561125b578273ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040182815481106111f9576111f8612146565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611248576001915061125b565b8080611253906121a4565b915050611141565b50801561129d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129490612238565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6cbc8134e69f02f9dbaa28d8f3d760a490876f55060afa4d6882a86c2590cc7b60405160405180910390a3600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f6cbc8134e69f02f9dbaa28d8f3d760a490876f55060afa4d6882a86c2590cc7b60405160405180910390a35050565b828054828255906000526020600020908101928215611514579160200282015b828111156115135782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906114bb565b5b5090506115219190611525565b5090565b5b8082111561153e576000816000905550600101611526565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61156981611556565b811461157457600080fd5b50565b60008135905061158681611560565b92915050565b6000602082840312156115a2576115a161154c565b5b60006115b084828501611577565b91505092915050565b60008115159050919050565b6115ce816115b9565b82525050565b60006020820190506115e960008301846115c5565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561162957808201518184015260208101905061160e565b60008484015250505050565b6000601f19601f8301169050919050565b6000611651826115ef565b61165b81856115fa565b935061166b81856020860161160b565b61167481611635565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116d6826116ab565b9050919050565b6116e6816116cb565b82525050565b60006116f883836116dd565b60208301905092915050565b6000602082019050919050565b600061171c8261167f565b611726818561168a565b93506117318361169b565b8060005b8381101561176257815161174988826116ec565b975061175483611704565b925050600181019050611735565b5085935050505092915050565b600060608201905081810360008301526117898186611646565b9050818103602083015261179d8185611646565b905081810360408301526117b18184611711565b9050949350505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117fd82611635565b810181811067ffffffffffffffff8211171561181c5761181b6117c5565b5b80604052505050565b600061182f611542565b905061183b82826117f4565b919050565b600067ffffffffffffffff82111561185b5761185a6117c5565b5b61186482611635565b9050602081019050919050565b82818337600083830152505050565b600061189361188e84611840565b611825565b9050828152602081018484840111156118af576118ae6117c0565b5b6118ba848285611871565b509392505050565b600082601f8301126118d7576118d66117bb565b5b81356118e7848260208601611880565b91505092915050565b6000806000606084860312156119095761190861154c565b5b600084013567ffffffffffffffff81111561192757611926611551565b5b611933868287016118c2565b935050602084013567ffffffffffffffff81111561195457611953611551565b5b611960868287016118c2565b925050604061197186828701611577565b9150509250925092565b611984816116cb565b811461198f57600080fd5b50565b6000813590506119a18161197b565b92915050565b6000602082840312156119bd576119bc61154c565b5b60006119cb84828501611992565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000611a1c826115ef565b611a268185611a00565b9350611a3681856020860161160b565b611a3f81611635565b840191505092915050565b60006040830160008301518482036000860152611a678282611a11565b9150506020830151611a7c60208601826116dd565b508091505092915050565b6000611a938383611a4a565b905092915050565b6000602082019050919050565b6000611ab3826119d4565b611abd81856119df565b935083602082028501611acf856119f0565b8060005b85811015611b0b5784840389528151611aec8582611a87565b9450611af783611a9b565b925060208a01995050600181019050611ad3565b50829750879550505050505092915050565b60006020820190508181036000830152611b378184611aa8565b905092915050565b611b4881611556565b82525050565b60006080820190508181036000830152611b688187611646565b90508181036020830152611b7c8186611646565b9050611b8b6040830185611b3f565b611b9860608301846115c5565b95945050505050565b60006020820190508181036000830152611bbb8184611711565b905092915050565b60006020820190508181036000830152611bdd8184611646565b905092915050565b7f55736572206e6f74207265676973746572656400000000000000000000000000600082015250565b6000611c1b6013836115fa565b9150611c2682611be5565b602082019050919050565b60006020820190508181036000830152611c4a81611c0e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c9857607f821691505b602082108103611cab57611caa611c51565b5b50919050565b7f5573657220616c72656164792072656769737465726564000000000000000000600082015250565b6000611ce76017836115fa565b9150611cf282611cb1565b602082019050919050565b60006020820190508181036000830152611d1681611cda565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611d7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611d42565b611d898683611d42565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000611dd0611dcb611dc684611da1565b611dab565b611da1565b9050919050565b6000819050919050565b611dea83611db5565b611dfe611df682611dd7565b848454611d4f565b825550505050565b600090565b611e13611e06565b611e1e818484611de1565b505050565b5b81811015611e4257611e37600082611e0b565b600181019050611e24565b5050565b601f821115611e8757611e5881611d1d565b611e6184611d32565b81016020851015611e70578190505b611e84611e7c85611d32565b830182611e23565b50505b505050565b600082821c905092915050565b6000611eaa60001984600802611e8c565b1980831691505092915050565b6000611ec38383611e99565b9150826002028217905092915050565b611edc826115ef565b67ffffffffffffffff811115611ef557611ef46117c5565b5b611eff8254611c80565b611f0a828285611e46565b600060209050601f831160018114611f3d5760008415611f2b578287015190505b611f358582611eb7565b865550611f9d565b601f198416611f4b86611d1d565b60005b82811015611f7357848901518255600182019150602085019450602081019050611f4e565b86831015611f905784890151611f8c601f891682611e99565b8355505b6001600288020188555050505b505050505050565b60006040820190508181036000830152611fbf8185611646565b90508181036020830152611fd38184611646565b90509392505050565b7f55736572206973206e6f74207265676973746572656400000000000000000000600082015250565b60006120126016836115fa565b915061201d82611fdc565b602082019050919050565b6000602082019050818103600083015261204181612005565b9050919050565b7f55736572206e6f74207265676973746572656421000000000000000000000000600082015250565b600061207e6014836115fa565b915061208982612048565b602082019050919050565b600060208201905081810360008301526120ad81612071565b9050919050565b7f557365722063616e6e6f7420616464207468656d73656c76657320617320667260008201527f69656e6421000000000000000000000000000000000000000000000000000000602082015250565b60006121106025836115fa565b915061211b826120b4565b604082019050919050565b6000602082019050818103600083015261213f81612103565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121af82611da1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121e1576121e0612175565b5b600182019050919050565b7f5573657220697320616c7265616479206120667269656e640000000000000000600082015250565b60006122226018836115fa565b915061222d826121ec565b602082019050919050565b6000602082019050818103600083015261225181612215565b905091905056fea26469706673582212206d5817dd077bc16e55de0836716e59a1cdef571aa2ba3211d1b24561e1329fac64736f6c63430008150033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 24,
        "contract": "contracts/UserRegistrationAndAuthentication.sol:UserRegistrationAndAuthentication",
        "label": "getAllUsers",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(AllUserStruct)20_storage)dyn_storage"
      },
      {
        "astId": 29,
        "contract": "contracts/UserRegistrationAndAuthentication.sol:UserRegistrationAndAuthentication",
        "label": "users",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(User)15_storage)"
      },
      {
        "astId": 33,
        "contract": "contracts/UserRegistrationAndAuthentication.sol:UserRegistrationAndAuthentication",
        "label": "userExist",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(AllUserStruct)20_storage)dyn_storage": {
        "base": "t_struct(AllUserStruct)20_storage",
        "encoding": "dynamic_array",
        "label": "struct UserRegistrationAndAuthentication.AllUserStruct[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(User)15_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct UserRegistrationAndAuthentication.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)15_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AllUserStruct)20_storage": {
        "encoding": "inplace",
        "label": "struct UserRegistrationAndAuthentication.AllUserStruct",
        "members": [
          {
            "astId": 17,
            "contract": "contracts/UserRegistrationAndAuthentication.sol:UserRegistrationAndAuthentication",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 19,
            "contract": "contracts/UserRegistrationAndAuthentication.sol:UserRegistrationAndAuthentication",
            "label": "accountAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(User)15_storage": {
        "encoding": "inplace",
        "label": "struct UserRegistrationAndAuthentication.User",
        "members": [
          {
            "astId": 5,
            "contract": "contracts/UserRegistrationAndAuthentication.sol:UserRegistrationAndAuthentication",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 7,
            "contract": "contracts/UserRegistrationAndAuthentication.sol:UserRegistrationAndAuthentication",
            "label": "email",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 9,
            "contract": "contracts/UserRegistrationAndAuthentication.sol:UserRegistrationAndAuthentication",
            "label": "passwordHash",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          },
          {
            "astId": 11,
            "contract": "contracts/UserRegistrationAndAuthentication.sol:UserRegistrationAndAuthentication",
            "label": "isRegistered",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 14,
            "contract": "contracts/UserRegistrationAndAuthentication.sol:UserRegistrationAndAuthentication",
            "label": "friendList",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage"
          }
        ],
        "numberOfBytes": "160"
      }
    }
  }
}